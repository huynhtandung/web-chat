type User {
  _id: ID!
  username: String!
  password: String!
  fullName: String!
}

type Query {
  me: MeOutput
  searchUser(input: SearchUserInput!): [User]
}

type Mutation {
  register(input: UserRegisterInput!): User
  login(input: UserLoginInput!): UserLoginOutput
}

input UserRegisterInput {
  username: String!
  password: String!
  fullName: String!
}

input UserLoginInput {
  username: String!
  password: String!
}

type UserLoginOutput {
  accessToken: String!
}

type MeOutput {
  currentUser: User
}

input SearchUserInput {
  keyword: String!
}
